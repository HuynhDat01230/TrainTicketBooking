<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        :root {
            --darkgreen: #005361;
            --white: #fff;
        }

        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        body,
        .tabs-to-dropdown .dropdown-toggle,
        .tabs-to-dropdown .dropdown-item {
            font-size: 1.3rem;
        }

        .tabs-to-dropdown .nav-wrapper {
            padding: 15px;
            box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.12);
        }

            .tabs-to-dropdown .nav-wrapper a {
                color: var(--darkgreen);
            }

        .tabs-to-dropdown .nav-pills li:not(:last-child) {
            margin-right: 30px;
        }

        .tabs-to-dropdown .tab-content .container-fluid {
            max-width: 1250px;
            padding-top: 70px;
            padding-bottom: 70px;
        }

        .tabs-to-dropdown .dropdown-menu {
            border: none;
            box-shadow: 0px 5px 14px rgba(0, 0, 0, 0.08);
        }

        .tabs-to-dropdown .dropdown-item {
            padding: 14px 28px;
        }


        .nav-item {
            cursor: pointer;
        }

        .active, .nav-link:hover {
            background-color: #f6ac9c;
            color: white;
        }

        .list-group-item:hover {
            background-color: #f6ac9c;
            color: white;
        }

        .submit-btn:hover {
            background-color: #f6ac9c;
            color: white;
        }
    </style>
</head>
<body style="height:2000px; position:absolute; width:100%; margin-top: 45px">
    <div>
        <div class="nav-wrapper d-flex align-items-center justify-content-between" style="
                                                                                        position:fixed;
                                                                                        top:0;
                                                                                        left:0;
                                                                                        right:0;
                                                                                        z-index:1;
                                                                                        margin-bottom:30px;
                                                                                        padding: 10px;
                                                                                        background-color: #fff;
                                                                                        border: 1px solid rgba(0, 0, 0, 0.125);">

            <ul class="nav nav-pills d-none d-md-flex" id="pills-tab" role="tablist" style="margin-left: 105px">
                <li class="nav-item" role="presentation">
                    <a> @Html.ActionLink("Trang chủ", "Index", "Home", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                </li>

                <li class="nav-item" role="presentation">
                    <a> @Html.ActionLink("Chuyến", "Index", "Chuyens", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                </li>

                @if (Session["username"] != "" && Session["username"] != null && Session["userType"].ToString().CompareTo("1") == 0)
                {
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Tài khoản", "Index", "Users", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Loại Tài khoản", "Index", "UserTypes", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Loại Vé", "Index", "LoaiVes", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>

                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Toa", "Index", "Toas", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Tàu", "Index", "Taus", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Vé", "Index", "Ves", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                }

                @if (Session["username"] != "" && Session["username"] != null && Session["userType"].ToString().CompareTo("2") == 0)
                {
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Vé", "Index", "Ves", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                }
                @if (Session["username"] != "" && Session["username"] != null && Session["userType"].ToString().CompareTo("3") == 0)
                {
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Mua Vé", "Index", "Ves", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Liên hệ", "About", "Home", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>

                }
                @if (Session["username"] == "" || Session["username"] == null)
                {
                    <li class="nav-item" role="presentation">
                        <a> @Html.ActionLink("Mua Vé", "Index", "Ves", new { area = "" }, new { @class = "nav-link", style = "color: #005361" })</a>
                    </li>
                }

            </ul>

           


            <ul class="list-group list-group-horizontal">
                @if (Session["username"] == "" || Session["username"] != null)
                {

                    <li class="list-group-item">
                        <a href="@Url.Action("Logout", "Login")">
                            <img src="~/Content/img/logout-svgrepo-com.svg" style="width: 20px; height: auto;color: #0d6efd">
                        </a>
                    </li>

                }
                else
                {
                    <li class="list-group-item">
                        <a href="@Url.Action("Index", "Login")">
                            <img src="~/Content/img/user.svg" style="width: 20px; height:auto">
                        </a>
                    </li>
                }
                <li class="list-group-item">
                    <a href="https://dsvn.vn/#/">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M9.19795 21.5H13.198V13.4901H16.8021L17.198 9.50977H13.198V7.5C13.198 6.94772 13.6457 6.5 14.198 6.5H17.198V2.5H14.198C11.4365 2.5 9.19795 4.73858 9.19795 7.5V9.50977H7.19795L6.80206 13.4901H9.19795V21.5Z" fill="currentColor" />
                        </svg>
                    </a>
                </li>
                <li class="list-group-item">
                    <a href="https://dsvn.vn/#/">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8 3C9.10457 3 10 3.89543 10 5V8H16C17.1046 8 18 8.89543 18 10C18 11.1046 17.1046 12 16 12H10V14C10 15.6569 11.3431 17 13 17H16C17.1046 17 18 17.8954 18 19C18 20.1046 17.1046 21 16 21H13C9.13401 21 6 17.866 6 14V5C6 3.89543 6.89543 3 8 3Z" fill="currentColor" />
                        </svg>
                    </a>
                </li>

            </ul>
        </div>
    </div>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @RenderSection("scripts", required: false)
</body>
</html>

<script>
const $tabsToDropdown = $(".tabs-to-dropdown");

function generateDropdownMarkup(container) {
  const $navWrapper = container.find(".nav-wrapper");
  const $navPills = container.find(".nav-pills");
  const firstTextLink = $navPills.find("li:first-child a").text();
  const $items = $navPills.find("li");
  const markup = `
    <div class="dropdown d-md-none">
      <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        ${firstTextLink}
      </button>
      <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
        ${generateDropdownLinksMarkup($items)}
      </div>
    </div>
  `;
  $navWrapper.prepend(markup);
}

function generateDropdownLinksMarkup(items) {
  let markup = "";
  items.each(function () {
    const textLink = $(this).find("a").text();
    markup += `<a class="dropdown-item" href="#">${textLink}</a>`;
  });

  return markup;
}

function showDropdownHandler(e) {
  // works also
  //const $this = $(this);
  const $this = $(e.target);
  const $dropdownToggle = $this.find(".dropdown-toggle");
  const dropdownToggleText = $dropdownToggle.text().trim();
  const $dropdownMenuLinks = $this.find(".dropdown-menu a");
  const dNoneClass = "d-none";
  $dropdownMenuLinks.each(function () {
    const $this = $(this);
    if ($this.text() == dropdownToggleText) {
      $this.addClass(dNoneClass);
    } else {
      $this.removeClass(dNoneClass);
    }
  });
}

function clickHandler(e) {
  e.preventDefault();
  const $this = $(this);
  const index = $this.index();
  const text = $this.text();
  $this.closest(".dropdown").find(".dropdown-toggle").text(`${text}`);
  $this
    .closest($tabsToDropdown)
    .find(`.nav-pills li:eq(${index}) a`)
    .tab("show");
}

function shownTabsHandler(e) {
  // works also
  //const $this = $(this);
  const $this = $(e.target);
  const index = $this.parent().index();
  const $parent = $this.closest($tabsToDropdown);
  const $targetDropdownLink = $parent.find(".dropdown-menu a").eq(index);
  const targetDropdownLinkText = $targetDropdownLink.text();
  $parent.find(".dropdown-toggle").text(targetDropdownLinkText);
}

$tabsToDropdown.each(function () {
  const $this = $(this);
  const $pills = $this.find('a[data-toggle="pill"]');

  generateDropdownMarkup($this);

  const $dropdown = $this.find(".dropdown");
  const $dropdownLinks = $this.find(".dropdown-menu a");

  $dropdown.on("show.bs.dropdown", showDropdownHandler);
  $dropdownLinks.on("click", clickHandler);
  $pills.on("shown.bs.tab", shownTabsHandler);
});
</script>


